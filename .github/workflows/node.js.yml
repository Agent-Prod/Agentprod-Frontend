name: CI/CD

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: [self-hosted, Linux, X64, production]
    env:
      NEXT_PUBLIC_APOLLO_API_KEY: ${{ secrets.APOLLO_API_KEY }}
      NEXT_PUBLIC_API_URL: ${{ secrets.NEXT_PUBLIC_API_URL }}
      NEXT_PUBLIC_LOCAL_SERVER: ${{ secrets.NEXT_PUBLIC_LOCAL_SERVER }}
      NEXT_PUBLIC_RAZORPAY_API_KEY: ${{ secrets.NEXT_PUBLIC_RAZORPAY_API_KEY }}
      NEXT_PUBLIC_SERVER_URL: ${{ secrets.NEXT_PUBLIC_SERVER_URL }}
      NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
      NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
      RAZORPAY_API_SECRET_KEY: ${{ secrets.RAZORPAY_API_SECRET_KEY }}

    steps:
      - uses: actions/checkout@v3
        with:
          clean: true

      - name: Cache Next.js build
        uses: actions/cache@v3
        with:
          path: |
            .next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-

      - name: Install dependencies
        run: npm ci

      - name: Build the app
        if: success()
        run: npm run build

      - name: Deploy and reload PM2
        if: success()
        working-directory: /home/ubuntu/frotend-main/_work/Agentprod-Frontend/Agentprod-Frontend
        run: |
          # Stop any existing processes first
          pm2 delete prod-app > /dev/null 2>&1 || true

          # Clean up any zombie processes
          pm2 kill > /dev/null 2>&1 || true

          # Start with 2 instances specifically (instead of max)
          pm2 start npm --name "prod-app" -i 2 -- start

          # More robust wait for processes
          for i in {1..30}; do
            ONLINE_COUNT=$(pm2 list | grep "prod-app" | grep "online" | wc -l)
            if [ "$ONLINE_COUNT" -eq 2 ]; then
              echo "All instances are online"
              break
            fi
            echo "Waiting for instances to come online ($ONLINE_COUNT/2)..."
            sleep 2
          done

          # Final check
          ONLINE_COUNT=$(pm2 list | grep "prod-app" | grep "online" | wc -l)
          if [ "$ONLINE_COUNT" -ne 2 ]; then
            echo "Failed to start all instances"
            pm2 logs prod-app --lines 50
            exit 1
          fi

      - name: Health check
        if: success()
        run: |
          # Check instance status
          ONLINE_COUNT=$(pm2 list | grep "prod-app" | grep "online" | wc -l)
          if [ "$ONLINE_COUNT" -ne 2 ]; then
            echo "Health check failed - not all instances are online ($ONLINE_COUNT/2)"
            pm2 logs prod-app --lines 50
            exit 1
          fi
          
          echo "Health check passed - all instances are online"

      - name: Save PM2 configuration
        if: success()
        run: pm2 save

      - name: Display process status
        if: always()
        run: |
          echo "Current PM2 process list:"
          pm2 list
          echo "Detailed status of prod-app:"
          pm2 show prod-app
          echo "Recent logs:"
          pm2 logs prod-app --lines 20 || true
