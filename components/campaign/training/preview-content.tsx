import React from "react";
import { Avatar, AvatarFallback } from "@/components/ui/avatar";
import {
  ResizableHandle,
  ResizablePanel,
  ResizablePanelGroup,
} from "@/components/ui/resizable";
import { Button } from "@/components/ui/button";
import TextField from "./preview-text-field";
import { Input } from "@/components/ui/input";
import { useUserContext } from "@/context/user-context";
import axiosInstance from "@/utils/axiosInstance";
import { useAutoGenerate } from "@/context/auto-generate-mail";
import { useParams } from "next/navigation";
import { PeopleProfileSheet } from "@/components/people-profile-sheet";
import { Lead } from "@/context/lead-user";
import {
  getAutogenerateTrainingEmail,
  getPreviewByTemplate,
} from "./training.api";
import { Textarea } from "@/components/ui/textarea";
import { useFieldsList } from "@/context/training-fields-provider";

function PreviewContent() {
  const { user } = useUserContext();
  const {
    autoGeneratedBody,
    autoGeneratedSubject,
    setAutoGeneratedBody,
    setAutoGeneratedSubject,
    contact,
    setContact,
    linkedinInformation,
    setLinkedinInformation,
    previewType,
  } = useAutoGenerate();
  const params = useParams<{ campaignId: string }>();
  const { fieldsList, body, subject } = useFieldsList();

  // const { fields } = useFieldValues();
 
  const newPreview = async () => {
    try {
      if (previewType === "previewFromTemplate") {
        const response = await getPreviewByTemplate({
          campaign_id: params.campaignId,
          user_id: user.id,
          template: `Subject: ${subject}
          Body: ${body}`,
          variables: fieldsList.variables,
          offering_variables: fieldsList.offering_variables,
          personalized_fields: fieldsList.personalized_fields,
          enriched_fields: fieldsList.enriched_fields,
        });
        setAutoGeneratedBody(response.email.body);
        setAutoGeneratedSubject(response.email.subject);
        setContact(response.contact);
        setLinkedinInformation(response.linkedin_information);
      } else {
        const response = await getAutogenerateTrainingEmail(
          params.campaignId,
          user.id
        );

        setAutoGeneratedBody(response.email.body);
        setAutoGeneratedSubject(response.email.subject);
        setContact(response.contact);
        setLinkedinInformation(response.linkedin_information);
        console.log("response from preview content api call", response);
      }
    } catch (error) {
      console.error("Failed to fetch training data:", error);
    }
  };

  React.useEffect(() => {
    console.log("email from preview", autoGeneratedBody, autoGeneratedSubject);
  }, [autoGeneratedBody, autoGeneratedSubject]);

  return (
    <ResizablePanelGroup direction="horizontal" className="">
      <ResizablePanel defaultSize={70}>
        <div className="flex justify-center p-6">
          <div className="flex-col w-full">
            <div className="flex justify-end">
              <Button onClick={newPreview}>New preview</Button>
            </div>
            <div className="flex mt-2 items-center">
              <Avatar className="flex h-10 w-10 items-center justify-center space-y-0 border bg-white mr-2 mt-1">
                <AvatarFallback>AV</AvatarFallback>
              </Avatar>
              <Input
                placeholder="Subject"
                className="flex-1 h-12"
                value={autoGeneratedSubject ? autoGeneratedSubject : ""}
                readOnly
              />
            </div>
            <div className="flex flex-row gap-2 mt-3">
              <Textarea
                className="h-[250px]"
                value={autoGeneratedBody ? autoGeneratedBody : ""}
              />
            </div>
          </div>
        </div>
      </ResizablePanel>
      <ResizableHandle withHandle />
      <ResizablePanel defaultSize={30}>
        <div className="flex h-full items-center">
          {contact && linkedinInformation && (
            <PeopleProfileSheet
              data={contact}
              companyInfoProp={linkedinInformation}
            />
          )}
        </div>
      </ResizablePanel>
    </ResizablePanelGroup>
  );
}

export default PreviewContent;
